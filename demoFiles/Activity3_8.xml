<?xml version="1.0" encoding="us-ascii"?>
<!DOCTYPE library SYSTEM "DeltaTickFormat.dtd">
<library name="Blocks Library" version="0.1">
    <numberSpecies number="2" message="You need only 2 species in this activity"></numberSpecies>
    
    <breed singular="bird" plural="birds" setupNumber="10" setupNumbers="15,20,25" maxNumber="20">
        <ownVar name="age">
            <maxReporter>100</maxReporter>
            <setupReporter>random 3</setupReporter>
        </ownVar>
        
        <ownVar name="energy">
            <maxReporter>100</maxReporter>
            <setupReporter>100</setupReporter>
        </ownVar>            
        <setupCode>
		setxy random-xcor random-ycor
		set size 1.5
		set color random color  
        </setupCode>
        <updateCode>
        set age age + 1
        ;set energy energy - 0.5
        if (count birds = 1) and (energy &lt; 0) [user-message (word "Nearly all the birds died out! They lost energy because they weren't eating prey.")
			if any? out-link-neighbors [ask out-link-neighbors [die]] die]
		if energy &lt; 0 [if any? out-link-neighbors [ask out-link-neighbors [die]] die]
        </updateCode>
    </breed> 

    <breed singular="bug" plural="bugs" setupNumber="25" setupNumbers="40,45,50" maxNumber="50">
        <ownVar name="age">
            <maxReporter>100</maxReporter>
            <setupReporter>random 3</setupReporter>
        </ownVar>
        <ownVar name="energy">
            <maxReporter>100</maxReporter>
            <setupReporter>random 100</setupReporter>
        </ownVar>
        <setupCode>
		setxy random-xcor random-ycor
		set size 1.5    
        </setupCode>
        <updateCode>
        set age age + 1
        set energy energy - .5
		if (count bugs = 1) and (energy &lt; 0) [user-message (word "Nearly all the bugs died out! They either all got caught by the predator or lost energy because they weren't eating grass.")
			if any? out-link-neighbors [ask out-link-neighbors [die]] die]           
		if (count bugs &gt; 1) and (energy &lt; 0) [if any? out-link-neighbors [ask out-link-neighbors [die]] die]
		</updateCode>
    </breed>
    
    <trait name="vision">
        <setupReporter>random 9</setupReporter>
        <variation name="very-far" value="5" color="" setupNumber="25"></variation>
        <variation name="far" value="4" color="" setupNumber="15"></variation>
        <variation name="medium" value="3" color="" setupNumber="30"></variation>
        <variation name="near" value="2" color="" setupNumber="20"></variation>
        <variation name="very-near" value="1" color="" setupNumber="10"></variation>
        <message>How far can they see??</message>
        <visualizeCode>set-sense-cone1</visualizeCode>
        <visualizeProcedure>
            let this-xcor xcor
            let this-ycor ycor
            let this-vision vision
            let this-heading heading
            hatch 1 [
            set breed sense-cones
            set size this-vision
            set shape "vision cone"
            create-link-from myself [tie] ]            
        </visualizeProcedure>
        <visualizeGoCode>show-sense-cone</visualizeGoCode>
        <visualizeGoProcedure>
            ask out-link-neighbors [set hidden? false]
        </visualizeGoProcedure>
        <traitShape>vision cone</traitShape>
    </trait>   
    
        
    <global name="turtles-last-tick">
        <setupReporter>count turtles</setupReporter>
        <updateReporter>count turtles</updateReporter>        
    </global>
	<global name="speed-factor">
		<setupReporter>0.1</setupReporter>
		<updateReporter>0.1</updateReporter>
	</global>

    <go>
    </go>

	<setup>
	ask patches [ set pcolor green + 2 ]
	</setup>
    
    <condition name="any-here?" traits="">
        <input name="breed-type" default="who?"></input>
        <test>report any? other turtles-here with [ breed = breed-type ]</test>
    </condition>
    
    <condition name="any-in-sight?" traits="vision">
        <input name="breed-type" default="who?"></input>
        <test>report any? other turtles in-cone vision 120 with [breed = breed-type ]</test>
    </condition>
    
    <condition name="age-more-than" traits="">
        <input name="my-age" default="10"></input>        
        <test>report age &gt; my-age</test>
    </condition>
    
    <behavior name="move" traits="">
        <commands>
        right (random-float 30 * 0.05 / speed-factor)
        left (random-float 30 * 0.05 / speed-factor)
        fd 2 * speed-factor
        </commands>
    </behavior>
       
    <behavior name="eat-grass" traits="">
        <commands>set energy energy + 10</commands>
    </behavior>
    
    
    <behavior name="flee" traits="">
        <agentInput name="predator" default ="from who?" tooltip="Who do they run away from?"></agentInput>
        <commands>
	let candidate-predators predator in-cone vision 120
	if any? predator in-cone vision 120
	[ let my-predator min-one-of candidate-predators [distance myself]
	set heading 180 + towards my-predator]
        </commands>
    </behavior>
    
    <behavior name="chase" traits="">
        <agentInput name="prey" default ="who?" tooltip="Who do they chase?"></agentInput>
        <commands>
        rt (random-float 5 - random-float 5)
        fd random-float 2 * speed-factor
        </commands>
    </behavior>

    <behavior name="eat" traits="" inputReporter="catch-prey">
        <agentInput name="prey1" default="who?" tooltip="Who do they eat?"></agentInput>
        <commands>
		ifelse is-agentset? prey1 [
			if any? other turtles-here with [breed = prey1] [
				let food one-of turtles-here with [breed = prey1]
				ask food [if any? out-link-neighbors [ask out-link-neighbors [die]] die]
				set energy energy + 10
			]
		]
		[
			if prey1 != nobody and not empty? prey1 [
				let food turtle item 0 prey1
				face food fd .5 * speed-factor
				if distance food &lt; 1 [
					ask food [if any? out-link-neighbors [ask out-link-neighbors [die]] die]
					set energy energy + 10
				]
			]
		]
        </commands>
    </behavior>
   
    <behavior name="die-with-chance" traits="">
        <percentInput name="probability" default="1"></percentInput>	
        <commands>if random-float 100 &lt; probability [die]       
        </commands>            
    </behavior>
    
    <behavior name="have-babies" traits="" mutate="true">
        <commands>
        ask one-of breedname with-max [energy] [
        ;set energy (energy / 2)
        ifelse count out-link-neighbors > 0 [
        hatch 1 [set age 0 rt random 180 fd 5 mutate set-sense-cone1]]
        [hatch 1 [set age 0 rt random 180 fd 5
		         mutate]]
        </commands>
    </behavior>
    
    <quantity name="number-of" histo="false" xlabel="Time" ylabel="Count" istrait="false">
        <input name="breed-type" default="species"></input>	
        <reporter>report count turtles with [ breed = breed-type ]</reporter>
    </quantity>
    
    <quantity name="average-of" histo="false" xlabel="Time" ylabel="Average" runresult="true" istrait="true">
        <input name="breed-type" default="species"></input>
        <input name="variable" default="trait"  tooltip="Trait"></input>        
        <reporter>
			ifelse not any? turtles with [breed = breed-type] [
				report 0
			]
			[
				report mean [runresult variable] of turtles with [breed = breed-type]
			]
		</reporter>
    </quantity>
    
    <quantity name="trial" histo="true" xlabel="Variations" ylabel="Count" istrait="true">
        <input name="tBlock" default="species?"></input>
        <reporter>report count turtles with [ breed = breed-type ]</reporter>
    </quantity>
       
    
    <visualization name="set-sense-cone" trait="vision">
        <commands>
        enter code here
        </commands>
    </visualization>
    
    <interface>
        <numberSpecies>2</numberSpecies>
        <mutationSlider>true</mutationSlider>
        <drawFeature>false</drawFeature>
        <stepIn>false</stepIn>
    </interface>

	<miscProcedure isReporter="true" name="catch-prey" parameters="breed-type">
		<procedureCode>
		report [who] of other turtles in-cone vision 120 with [ breed = breed-type ]
		</procedureCode>
	</miscProcedure>

	<miscProcedure isReporter="false" name="mutate-breed-vision" parameters="breed-type,mutation-probability">
		<procedureCode>
		if breed = breed-type [
		if random-float 100 &lt; mutation-probability [ ifelse random-float 100 &lt; 50
			[set vision (vision + .5 )]
			[set vision (vision - .5 )]
		if vision &lt; 0 [set vision 0]
		if vision &gt; 10 [set vision 10]
		]
		]
		</procedureCode>
	</miscProcedure>
    
</library>
